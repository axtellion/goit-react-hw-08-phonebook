{"version":3,"file":"static/js/558.7898839b.chunk.js","mappings":"sNAIaA,EAAY,WAEvB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACtC,OAAQD,GACN,IAAK,QACH,OAAOL,EAASM,GAClB,IAAK,WACH,OAAOJ,EAAYI,GACrB,QACE,SAUN,OACE,4BACE,wCACA,kBAAMC,SATW,SAAAC,GACnBA,EAAEC,iBAEFT,EAAS,IACTE,EAAY,KAKV,WACE,sCAEE,kBACEQ,KAAK,QACLL,KAAK,QACLC,MAAOP,EACPY,SAAUR,QAGd,yCAEE,kBACEO,KAAK,WACLL,KAAK,WACLC,MAAOL,EACPU,SAAUR,QAGd","sources":["pages/LoginPages/LoginPages.jsx"],"sourcesContent":["import { useState } from 'react';\n// import { useDispatch } from 'react-redux';\n// import { authOperations } from 'redux/auth';\n\nexport const LoginPage = () => {\n  //   const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    // dispatch(authOperations.logIn({ email, password }));\n    setEmail('');\n    setPassword('');\n  };\n  return (\n    <div>\n      <h1>Login page</h1>\n      <form onSubmit={handleSubmit}>\n        <label>\n          email\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n          ></input>\n        </label>\n        <label>\n          password\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n          ></input>\n        </label>\n        <button>Login</button>\n      </form>\n    </div>\n  );\n};\n"],"names":["LoginPage","useState","email","setEmail","password","setPassword","handleChange","target","name","value","onSubmit","e","preventDefault","type","onChange"],"sourceRoot":""}